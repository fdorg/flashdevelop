////////////////////////////////////////////////////////////////////////////////
//
//  ADOBE SYSTEMS INCORPORATED
//  Copyright 2003-2007 Adobe Systems Incorporated
//  All Rights Reserved.
//
//  NOTICE: Adobe permits you to use, modify, and distribute this file
//  in accordance with the terms of the license agreement accompanying it.
//
////////////////////////////////////////////////////////////////////////////////
using System;
using Base64 = flash.util.Base64;
using SwfImageUtils = flash.util.SwfImageUtils;
using Dictionary = flash.swf.Dictionary;
using Header = flash.swf.Header;
using TagEncoder = flash.swf.TagEncoder;
using TagHandler = flash.swf.TagHandler;
using TagValues = flash.swf.TagValues;
using DebugID = flash.swf.tags.DebugID;
using DefineBits = flash.swf.tags.DefineBits;
using DefineShape = flash.swf.tags.DefineShape;
using DefineSprite = flash.swf.tags.DefineSprite;
using DefineTag = flash.swf.tags.DefineTag;
using DoAction = flash.swf.tags.DoAction;
using DoInitAction = flash.swf.tags.DoInitAction;
using EnableDebugger = flash.swf.tags.EnableDebugger;
using ExportAssets = flash.swf.tags.ExportAssets;
using FrameLabel = flash.swf.tags.FrameLabel;
using GenericTag = flash.swf.tags.GenericTag;
using ImportAssets = flash.swf.tags.ImportAssets;
using PlaceObject = flash.swf.tags.PlaceObject;
using ProductInfo = flash.swf.tags.ProductInfo;
using ScriptLimits = flash.swf.tags.ScriptLimits;
using SetBackgroundColor = flash.swf.tags.SetBackgroundColor;
using ShowFrame = flash.swf.tags.ShowFrame;
using FileAttributes = flash.swf.tags.FileAttributes;
using CXForm = flash.swf.types.CXForm;
using CurvedEdgeRecord = flash.swf.types.CurvedEdgeRecord;
using FillStyle = flash.swf.types.FillStyle;
using FlashUUID = flash.swf.types.FlashUUID;
using GradRecord = flash.swf.types.GradRecord;
using ImportRecord = flash.swf.types.ImportRecord;
using LineStyle = flash.swf.types.LineStyle;
using Matrix = flash.swf.types.Matrix;
using Rect = flash.swf.types.Rect;
using ShapeWithStyle = flash.swf.types.ShapeWithStyle;
using StraightEdgeRecord = flash.swf.types.StraightEdgeRecord;
using StyleChangeRecord = flash.swf.types.StyleChangeRecord;
using Gradient = flash.swf.types.Gradient;
using ArrayUtil = flash.util.ArrayUtil;
using FileUtils = flash.util.FileUtils;
using StringUtils = flash.util.StringUtils;
using Trace = flash.util.Trace;
namespace flash.swf.tools
{
	
	/// <summary> read SWFX format and turn it back into a SWF.  SWFX format can be created by
	/// hand or it also can be generated by the swfdump utility.
	/// 
	/// </summary>
	/// <author>  Edwin Smith
	/// </author>
	/// <seealso cref="SwfxPrinter.main">
	/// </seealso>
	public class SwfxParser:XmlSaxDefaultHandler, TagValues
	{
		private TagHandler tagHandler;
		private DefineSprite sprite;
		//UPGRADE_TODO: The equivalent in .NET for method 'org.xml.sax.Locator' may return a different value. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1043'"
		private XmlSaxLocator locator;
		private System.Text.StringBuilder text;
		private Header header;
		private System.Collections.ArrayList stack;
		private System.Collections.ArrayList fillstyles;
		private System.Collections.ArrayList linestyles;
		private System.String docPath;
		private Dictionary dict;
		private System.String[] aspath;
		private System.String topLevel;
		private GenericTag jpegTables;
		private int startLineNumber;
		
		private TagHandler currentHandler()
		{
			return sprite != null?sprite.tagList:tagHandler;
		}
		
		public SwfxParser(TagHandler handler, System.String[] aspath)
		{
			this.tagHandler = handler;
			this.aspath = aspath;
			try
			{
				this.topLevel = FileUtils.readFile(aspath[0] + System.IO.Path.DirectorySeparatorChar.ToString() + "toplevel.as", null);
			}
			catch (System.IO.IOException ex)
			{
				this.topLevel = null;
			}
			
			stack = new System.Collections.ArrayList();
			dict = new Dictionary();
		}
		
		public override void  startElement(System.String uri, System.String localName, System.String qName, SaxAttributesSupport attributes)
		{
			try
			{
				System.Reflection.MethodInfo method = GetType().GetMethod(qName, (new System.Type[]{typeof(SaxAttributesSupport)} == null)?new System.Type[0]:(System.Type[]) new System.Type[]{typeof(SaxAttributesSupport)});
				method.Invoke(this, new System.Object[]{attributes});
			}
			catch (System.MethodAccessException e)
			{
				//UPGRADE_ISSUE: Constructor 'org.xml.sax.SAXParseException.SAXParseException' was not converted. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1000_orgxmlsaxSAXParseExceptionSAXParseException_javalangString_orgxmlsaxLocator'"
				warning(new SAXParseException("no start handler for " + qName, locator));
			}
			catch (System.UnauthorizedAccessException e)
			{
				//UPGRADE_TODO: Constructor 'org.xml.sax.SAXParseException.SAXParseException' was converted to 'System.Xml.XmlException' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073_orgxmlsaxSAXParseExceptionSAXParseException_javalangString_orgxmlsaxLocator_javalangException'"
				//UPGRADE_TODO: Class 'org.xml.sax.SAXParseException' was converted to 'System.xml.XmlException' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073'"
				//UPGRADE_TODO: The equivalent in .NET for method 'java.lang.Throwable.getMessage' may return a different value. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1043'"
				fatalError(new System.Xml.XmlException(e.Message, e));
			}
			catch (System.Reflection.TargetInvocationException e)
			{
				//UPGRADE_NOTE: Exception 'java.lang.Throwable' was converted to 'System.Exception' which has different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1100'"
				System.Exception t = e.GetBaseException();
				//UPGRADE_TODO: Class 'org.xml.sax.SAXException' was converted to 'System.Xml.XmlException' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073'"
				if (t is System.Xml.XmlException)
				{
					//UPGRADE_TODO: Class 'org.xml.sax.SAXException' was converted to 'System.Xml.XmlException' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073'"
					throw (System.Xml.XmlException) t;
				}
				else
				{
					//UPGRADE_TODO: Constructor 'org.xml.sax.SAXParseException.SAXParseException' was converted to 'System.Xml.XmlException' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073_orgxmlsaxSAXParseExceptionSAXParseException_javalangString_orgxmlsaxLocator_javalangException'"
					//UPGRADE_TODO: Class 'org.xml.sax.SAXParseException' was converted to 'System.xml.XmlException' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073'"
					//UPGRADE_TODO: The equivalent in .NET for method 'java.lang.Throwable.getMessage' may return a different value. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1043'"
					fatalError(new System.Xml.XmlException(e.Message, e));
				}
			}
		}
		
		public override void  characters(System.Char[] ch, int start, int length)
		{
			if (text != null)
				text.Append(ch, start, length);
		}
		
		public virtual void  curve(SaxAttributesSupport attributes)
		{
			CurvedEdgeRecord curvedEdge = new CurvedEdgeRecord();
			
			curvedEdge.controlDeltaX = parseInt(getAttribute(attributes, "cdx"));
			curvedEdge.controlDeltaY = parseInt(getAttribute(attributes, "cdy"));
			curvedEdge.anchorDeltaX = parseInt(getAttribute(attributes, "dx"));
			curvedEdge.anchorDeltaY = parseInt(getAttribute(attributes, "dy"));
			
			DefineShape defineShape = (DefineShape) stack[stack.Count - 1];
			defineShape.shapeWithStyle.shapeRecords.Add(curvedEdge);
		}
		
		public virtual void  curve()
		{
		}
		
		public virtual void  DebugID(SaxAttributesSupport attributes)
		{
			DebugID debugId = new DebugID(parseUUID(getAttribute(attributes, "uuid")));
			tagHandler.debugID(debugId);
		}
		
		public virtual void  DebugID()
		{
		}
		
		private FlashUUID parseUUID(System.String s)
		{
			sbyte[] b = new sbyte[s.Length / 2];
			for (int i = 0; i < b.Length; i++)
			{
				//UPGRADE_TODO: The equivalent in .NET for method 'java.lang.Character.digit' may return a different value. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1043'"
				b[i] = (sbyte) ((System.Char.GetNumericValue(s[2 * i]) << 4) | (System.Char.GetNumericValue(s[2 * i + 1]) << 0));
			}
			return new FlashUUID(b);
		}
		
		/// <summary> Add an id to the dictionary of characters, tracking what the player
		/// would do anyway.  The player will ignore the new definition if another
		/// one with the same ID already exists.
		/// 
		/// </summary>
		/// <param name="id">
		/// </param>
		/// <param name="tag">
		/// </param>
		/// <throws>  SAXParseException </throws>
		private void  createCharacter(int id, DefineTag tag)
		{
			try
			{
				dict.add(id, tag);
			}
			catch (System.ArgumentException e)
			{
				// player will ignore dups, so print a warning
				//UPGRADE_TODO: Constructor 'org.xml.sax.SAXParseException.SAXParseException' was converted to 'System.Xml.XmlException' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073_orgxmlsaxSAXParseExceptionSAXParseException_javalangString_orgxmlsaxLocator_javalangException'"
				//UPGRADE_TODO: Class 'org.xml.sax.SAXParseException' was converted to 'System.xml.XmlException' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073'"
				//UPGRADE_TODO: The equivalent in .NET for method 'java.lang.Throwable.getMessage' may return a different value. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1043'"
				error(new System.Xml.XmlException(e.Message, e));
			}
		}
		
		private SwfImageUtils.JPEG loadJPEG(SaxAttributesSupport attributes)
		{
			if (hasAttribute(attributes, "encoding"))
			{
				if (!getAttribute(attributes, "encoding").Equals("base64"))
				{
					//UPGRADE_ISSUE: Constructor 'org.xml.sax.SAXParseException.SAXParseException' was not converted. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1000_orgxmlsaxSAXParseExceptionSAXParseException_javalangString_orgxmlsaxLocator'"
					fatalError(new SAXParseException("unknown encoding " + getAttribute(attributes, "encoding"), locator));
				}
				if (hasAttribute(attributes, "src"))
				{
					//UPGRADE_ISSUE: Constructor 'org.xml.sax.SAXParseException.SAXParseException' was not converted. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1000_orgxmlsaxSAXParseExceptionSAXParseException_javalangString_orgxmlsaxLocator'"
					fatalError(new SAXParseException("can only specify one of src or encoding attributes", locator));
				}
				
				text = new System.Text.StringBuilder();
			}
			else
			{
				text = null;
				if (!hasAttribute(attributes, "src"))
				{
					//UPGRADE_ISSUE: Constructor 'org.xml.sax.SAXParseException.SAXParseException' was not converted. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1000_orgxmlsaxSAXParseExceptionSAXParseException_javalangString_orgxmlsaxLocator'"
					fatalError(new SAXParseException("must provide either src or encoding attribute", locator));
				}
				try
				{
					System.IO.FileInfo src = new System.IO.FileInfo(getAttribute(attributes, "src"));
					//UPGRADE_TODO: Constructor 'java.io.FileInputStream.FileInputStream' was converted to 'System.IO.FileStream.FileStream' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073_javaioFileInputStreamFileInputStream_javalangString'"
					System.IO.FileStream input = new System.IO.FileStream(getAttribute(attributes, "src"), System.IO.FileMode.Open, System.IO.FileAccess.Read);
					sbyte[] image = new sbyte[(int) SupportClass.FileLength(src)];
					SupportClass.ReadInput(input, image, 0, image.Length);
					input.Close();
					SwfImageUtils.JPEG jpeg = new SwfImageUtils.JPEG(image, true);
					if (!jpeg.validate())
					{
						//UPGRADE_ISSUE: Constructor 'org.xml.sax.SAXParseException.SAXParseException' was not converted. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1000_orgxmlsaxSAXParseExceptionSAXParseException_javalangString_orgxmlsaxLocator'"
						fatalError(new SAXParseException("Invalid JPEG data in " + src.Name, locator));
					}
					return jpeg;
				}
				catch (System.IO.IOException e)
				{
					//UPGRADE_ISSUE: Constructor 'org.xml.sax.SAXParseException.SAXParseException' was not converted. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1000_orgxmlsaxSAXParseExceptionSAXParseException_javalangString_orgxmlsaxLocator'"
					//UPGRADE_TODO: The equivalent in .NET for method 'java.lang.Throwable.getMessage' may return a different value. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1043'"
					throw new SAXParseException(e.Message, locator);
				}
			}
			return null;
		}
		
		public virtual void  DefineBits(SaxAttributesSupport attributes)
		{
			if (jpegTables == null)
			{
				//UPGRADE_ISSUE: Constructor 'org.xml.sax.SAXParseException.SAXParseException' was not converted. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1000_orgxmlsaxSAXParseExceptionSAXParseException_javalangString_orgxmlsaxLocator'"
				fatalError(new SAXParseException("DefineBits must follow JPEGTables", locator));
			}
			
			DefineBits db = new DefineBits(flash.swf.TagValues_Fields.stagDefineBits);
			int id = parseInt(getAttribute(attributes, "id"));
			createCharacter(id, db);
			
			SwfImageUtils.JPEG jpeg = loadJPEG(attributes);
			
			if (jpeg != null)
			{
				if (!ArrayUtil.equals(jpeg.table, jpegTables.data))
				{
					//UPGRADE_ISSUE: Constructor 'org.xml.sax.SAXParseException.SAXParseException' was not converted. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1000_orgxmlsaxSAXParseExceptionSAXParseException_javalangString_orgxmlsaxLocator'"
					fatalError(new SAXParseException("JPEGTables data does not match, use DefineBitsJPEG2", locator));
				}
				db.data = jpeg.data;
			}
			stack.Add(db);
		}
		
		public virtual void  DefineBits()
		{
			DefineBits db = (DefineBits) SupportClass.StackSupport.Pop(stack);
			if (text != null)
			{
				// text is allocated for the base64 encoding
				
				Base64.Decoder dec = new Base64.Decoder();
				
				dec.decode(text.ToString());
				
				db.data = dec.flush();
				db.jpegTables = jpegTables;
			}
			
			currentHandler().defineBits(db);
		}
		
		public virtual void  DefineBitsJPEG2(SaxAttributesSupport attributes)
		{
			DefineBits db = new DefineBits(flash.swf.TagValues_Fields.stagDefineBitsJPEG2);
			int id = parseInt(getAttribute(attributes, "id"));
			createCharacter(id, db);
			if (hasAttribute(attributes, "encoding"))
			{
				if (!getAttribute(attributes, "encoding").Equals("base64"))
				{
					//UPGRADE_ISSUE: Constructor 'org.xml.sax.SAXParseException.SAXParseException' was not converted. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1000_orgxmlsaxSAXParseExceptionSAXParseException_javalangString_orgxmlsaxLocator'"
					fatalError(new SAXParseException("unknown encoding " + getAttribute(attributes, "encoding"), locator));
				}
				if (hasAttribute(attributes, "src"))
				{
					//UPGRADE_ISSUE: Constructor 'org.xml.sax.SAXParseException.SAXParseException' was not converted. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1000_orgxmlsaxSAXParseExceptionSAXParseException_javalangString_orgxmlsaxLocator'"
					fatalError(new SAXParseException("can only specify one of src or encoding attributes", locator));
				}
				
				text = new System.Text.StringBuilder();
			}
			else
			{
				if (!hasAttribute(attributes, "src"))
				{
					//UPGRADE_ISSUE: Constructor 'org.xml.sax.SAXParseException.SAXParseException' was not converted. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1000_orgxmlsaxSAXParseExceptionSAXParseException_javalangString_orgxmlsaxLocator'"
					fatalError(new SAXParseException("must provide either src or encoding attribute", locator));
				}
				
				System.IO.FileInfo src = new System.IO.FileInfo(getAttribute(attributes, "src"));
				
				try
				{
					//UPGRADE_TODO: Constructor 'java.io.FileInputStream.FileInputStream' was converted to 'System.IO.FileStream.FileStream' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073_javaioFileInputStreamFileInputStream_javalangString'"
					System.IO.FileStream input = new System.IO.FileStream(getAttribute(attributes, "src"), System.IO.FileMode.Open, System.IO.FileAccess.Read);
					db.data = new sbyte[(int) SupportClass.FileLength(src)];
					SupportClass.ReadInput(input, db.data, 0, db.data.Length);
				}
				catch (System.IO.IOException e)
				{
					//UPGRADE_ISSUE: Constructor 'org.xml.sax.SAXParseException.SAXParseException' was not converted. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1000_orgxmlsaxSAXParseExceptionSAXParseException_javalangString_orgxmlsaxLocator'"
					//UPGRADE_TODO: The equivalent in .NET for method 'java.lang.Throwable.getMessage' may return a different value. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1043'"
					fatalError(new SAXParseException("Unable to load DefineBitsJPEG2 src " + src.Name + ":" + e.Message, locator));
				}
			}
			stack.Add(db);
		}
		
		public virtual void  DefineBitsJPEG2()
		{
			DefineBits db = (DefineBits) SupportClass.StackSupport.Pop(stack);
			if (text != null)
			{
				// text is allocated for the base64 encoding
				
				Base64.Decoder dec = new Base64.Decoder();
				
				dec.decode(text.ToString());
				
				db.data = dec.flush();
				db.jpegTables = null;
			}
			
			currentHandler().defineBits(db);
		}
		
		public virtual void  DefineShape(SaxAttributesSupport attributes)
		{
			DefineShape tag = new DefineShape(flash.swf.TagValues_Fields.stagDefineShape);
			int id = parseInt(getAttribute(attributes, "id"));
			createCharacter(id, tag);
			tag.bounds = parseRect(getAttribute(attributes, "bounds"));
			tag.shapeWithStyle = new ShapeWithStyle();
			tag.shapeWithStyle.fillstyles = new System.Collections.ArrayList();
			tag.shapeWithStyle.linestyles = new System.Collections.ArrayList();
			tag.shapeWithStyle.shapeRecords = new System.Collections.ArrayList();
			
			stack.Add(tag);
			fillstyles = tag.shapeWithStyle.fillstyles;
			linestyles = tag.shapeWithStyle.linestyles;
		}
		
		public virtual void  DefineShape()
		{
			DefineShape tag = (DefineShape) SupportClass.StackSupport.Pop(stack);
			fillstyles = null;
			linestyles = null;
			tagHandler.defineShape(tag);
		}
		
		public virtual void  DefineShape3(SaxAttributesSupport attributes)
		{
			DefineShape tag = new DefineShape(flash.swf.TagValues_Fields.stagDefineShape3);
			int id = parseInt(getAttribute(attributes, "id"));
			createCharacter(id, tag);
			tag.bounds = parseRect(getAttribute(attributes, "bounds"));
			tag.shapeWithStyle = new ShapeWithStyle();
			tag.shapeWithStyle.fillstyles = new System.Collections.ArrayList();
			tag.shapeWithStyle.linestyles = new System.Collections.ArrayList();
			tag.shapeWithStyle.shapeRecords = new System.Collections.ArrayList();
			
			stack.Add(tag);
			fillstyles = tag.shapeWithStyle.fillstyles;
			linestyles = tag.shapeWithStyle.linestyles;
		}
		
		public virtual void  DefineShape3()
		{
			DefineShape tag = (DefineShape) SupportClass.StackSupport.Pop(stack);
			fillstyles = null;
			linestyles = null;
			tagHandler.defineShape3(tag);
		}
		
		public virtual void  DefineSprite(SaxAttributesSupport attributes)
		{
			DefineSprite sprite = new DefineSprite();
			int id = parseInt(getAttribute(attributes, "id"));
			createCharacter(id, sprite);
			stack.Add(sprite);
			this.sprite = sprite;
		}
		
		public virtual void  DefineSprite()
		{
			DefineSprite sprite = (DefineSprite) SupportClass.StackSupport.Pop(stack);
			this.sprite = null;
			tagHandler.defineSprite(sprite);
		}
		
		public virtual void  DoAction(SaxAttributesSupport attributes)
		{
			text = new System.Text.StringBuilder();
			startLineNumber = locator.getLineNumber();
		}
		
		public virtual void  DoAction()
		{
			//try
			//{
			//String code = text.toString();
			text = null;
			
			/*
			AsActionsContainerInfo info = new AsActionsContainerInfo();
			ActionScriptCompiler compiler = packageManager.createCompiler(info, ActionType.kFrameActions,
			CompileFlags.kCompileString,
			startLineNumber);
			compiler.setFileName(docPath);
			compiler.compile(code, true);
			if (compiler.errorsExist())
			{
			throw new SAXParseException("compile failed", locator);
			}
			byte[] bytecode = compiler.getAsBytes();
			*/
			DoAction doAction = new DoAction();
			
			//SwfDecoder r = new SwfDecoder(bytecode, header.version);
			//doAction.actionList = new ActionDecoder(r).decode(bytecode.length);
			
			currentHandler().doAction(doAction);
			//}
			//catch (IOException e)
			//{
			//    fatalError(new SAXParseException(e.getMessage(), locator, e));
			//}
		}
		
		public virtual void  ProductInfo(SaxAttributesSupport attributes)
		{
			int product = parseInt(getAttribute(attributes, "product"));
			int edition = parseInt(getAttribute(attributes, "edition"));
			sbyte majorVersion = (sbyte) System.SByte.Parse(getAttribute(attributes, "majorVersion"));
			sbyte minorVersion = (sbyte) System.SByte.Parse(getAttribute(attributes, "majorVersion"));
			long build = System.Int64.Parse(getAttribute(attributes, "build"));
			long compileDate = System.Int64.Parse(getAttribute(attributes, "compileDate"));
			
			stack.Add(new ProductInfo(product, edition, majorVersion, minorVersion, build, compileDate));
		}
		
		public virtual void  FileAttributes()
		{
			tagHandler.fileAttributes((FileAttributes) SupportClass.StackSupport.Pop(stack));
		}
		
		public virtual void  FileAttributes(SaxAttributesSupport attributes)
		{
			FileAttributes tag = new FileAttributes();
			tag.hasMetadata = parseBoolean(getAttribute(attributes, "hasMetadata"));
			tag.actionScript3 = parseBoolean(getAttribute(attributes, "actionScript3"));
			tag.suppressCrossDomainCaching = parseBoolean(getAttribute(attributes, "suppressCrossDomainCaching"));
			tag.swfRelativeUrls = parseBoolean(getAttribute(attributes, "swfRelativeUrls"));
			tag.useNetwork = parseBoolean(getAttribute(attributes, "useNetwork"));
			stack.Add(tag);
		}
		
		public virtual void  ProductInfo()
		{
			tagHandler.productInfo((ProductInfo) SupportClass.StackSupport.Pop(stack));
		}
		
		private DefineTag findCharacter(int idref)
		{
			try
			{
				return dict.getTag(idref);
			}
			catch (System.ArgumentException e)
			{
				//return null;
				//UPGRADE_TODO: Constructor 'org.xml.sax.SAXParseException.SAXParseException' was converted to 'System.Xml.XmlException' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073_orgxmlsaxSAXParseExceptionSAXParseException_javalangString_orgxmlsaxLocator_javalangException'"
				//UPGRADE_TODO: Class 'org.xml.sax.SAXParseException' was converted to 'System.xml.XmlException' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073'"
				//UPGRADE_TODO: The equivalent in .NET for method 'java.lang.Throwable.getMessage' may return a different value. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1043'"
				throw new System.Xml.XmlException(e.Message, e);
			}
		}
		
		public virtual void  Package(SaxAttributesSupport attributes)
		{
			text = new System.Text.StringBuilder();
			DefineSprite pkg = new DefineSprite();
			DoInitAction initAction = new DoInitAction(pkg);
			// get id for this package
			int id = parseInt(getAttribute(attributes, "id"));
			createCharacter(id, pkg);
			currentHandler().defineSprite(pkg);
			startLineNumber = locator.getLineNumber();
			stack.Add(initAction);
		}
		
		public virtual void  Package()
		{
			//try
			//{
			//    String code = text.toString();
			text = null;
			DoInitAction initAction = (DoInitAction) SupportClass.StackSupport.Pop(stack);
			
			/*
			AsActionsContainerInfo info = new AsActionsContainerInfo();
			info.setModuleName(docPath);
			ActionScriptCompiler compiler = packageManager.createCompiler(info, ActionType.kPackageActions,
			CompileFlags.kCompileString,
			startLineNumber);
			// don't set the filename here because it makes AS2 compilain about the filename
			//compiler.setFileName(docPath);
			compiler.compile(code, true);
			if (compiler.errorsExist())
			{
			throw new SAXParseException("compile failed", locator);
			}
			byte[] bytecode = compiler.getAsBytes();
			*/
			//ActionDecoder actionDecoder = new ActionDecoder(new SwfDecoder(bytecode, header.version));
			//initAction.actionList = actionDecoder.decode(bytecode.length);
			
			currentHandler().doInitAction(initAction);
			//}
			//catch (IOException e)
			//{
			//    fatalError(new SAXParseException(e.getMessage(), locator, e));
			//}
		}
		
		public virtual void  DoInitAction(SaxAttributesSupport attributes)
		{
			text = new System.Text.StringBuilder();
			DoInitAction initAction = new DoInitAction();
			// get id of previous DefineSprite
			int idref = parseInt(getAttribute(attributes, "idref"));
			initAction.sprite = (DefineSprite) findCharacter(idref);
			startLineNumber = locator.getLineNumber();
			stack.Add(initAction);
		}
		
		public virtual void  DoInitAction()
		{
			//try
			//{
			//String code = text.toString();
			text = null;
			DoInitAction initAction = (DoInitAction) SupportClass.StackSupport.Pop(stack);
			
			/*
			AsActionsContainerInfo info = new AsActionsContainerInfo();
			ActionScriptCompiler compiler = packageManager.createCompiler(info, ActionType.kUndefinedActions,
			CompileFlags.kCompileString,
			startLineNumber);
			compiler.setFileName(docPath);
			compiler.compile(code, true);
			if (compiler.errorsExist())
			{
			throw new SAXParseException("compile failed", locator);
			}
			byte[] bytecode = compiler.getAsBytes();
			ActionDecoder actionDecoder = new ActionDecoder(new SwfDecoder(bytecode, header.version));
			initAction.actionList = actionDecoder.decode(bytecode.length);
			*/
			
			currentHandler().doInitAction(initAction);
			//}
			//catch (IOException e)
			//{
			//    fatalError(new SAXParseException(e.getMessage(), locator, e));
			//}
		}
		
		public virtual void  EnableDebugger2(SaxAttributesSupport attributes)
		{
			EnableDebugger enableDebugger2 = new EnableDebugger(flash.swf.TagValues_Fields.stagEnableDebugger2);
			enableDebugger2.password = getAttribute(attributes, "password");
			tagHandler.enableDebugger2(enableDebugger2);
		}
		
		public virtual void  EnableDebugger2()
		{
		}
		
		public virtual void  ExportAssets(SaxAttributesSupport attributes)
		{
			ExportAssets tag = new ExportAssets();
			stack.Add(tag);
		}
		
		public virtual void  ExportAssets()
		{
			ExportAssets tag = (ExportAssets) SupportClass.StackSupport.Pop(stack);
			tagHandler.exportAssets(tag);
		}
		
		public virtual void  Export(SaxAttributesSupport attributes)
		{
			ExportAssets tag = (ExportAssets) stack[stack.Count - 1];
			int idref = parseInt(getAttribute(attributes, "idref"));
			System.String name = getAttribute(attributes, "name");
			DefineTag ref_Renamed = findCharacter(idref);
			ref_Renamed.name = name;
			tag.exports.Add(ref_Renamed);
		}
		
		public virtual void  Export()
		{
		}
		
		public virtual void  fillstyle(SaxAttributesSupport attributes)
		{
			DefineShape defineShape = (DefineShape) stack[stack.Count - 1];
			bool hasAlpha = (defineShape.code == flash.swf.TagValues_Fields.stagDefineShape3);
			FillStyle fillstyle = new FillStyle();
			if (hasAttribute(attributes, "color"))
			{
				fillstyle.Type = FillStyle.FILL_SOLID;
				fillstyle.color = hasAlpha?parseRGBA(getAttribute(attributes, "color")):parseRGB(getAttribute(attributes, "color"));
			}
			if (hasAttribute(attributes, "gradient"))
			{
				// todo support radial gradients
				fillstyle.Type = FillStyle.FILL_LINEAR_GRADIENT;
				fillstyle.gradient = parseGradient(getAttribute(attributes, "gradient"), hasAlpha);
				fillstyle.matrix = parseMatrix(getAttribute(attributes, "matrix"));
			}
			if (hasAttribute(attributes, "idref"))
			{
				// todo support clipped bitmaps
				fillstyle.Type = FillStyle.FILL_BITS; // tiled
				int idref = parseInt(getAttribute(attributes, "idref"));
				// todo check to make sure bitmapId points to a bitmap
				fillstyle.bitmap = findCharacter(idref);
				fillstyle.matrix = parseMatrix(getAttribute(attributes, "matrix"));
			}
			
			defineShape.shapeWithStyle.fillstyles.Add(fillstyle);
		}
		
		public virtual void  fillstyle()
		{
		}
		
		public virtual void  FrameLabel(SaxAttributesSupport attributes)
		{
			FrameLabel frameLabel = new FrameLabel();
			frameLabel.label = getAttribute(attributes, "label");
			frameLabel.anchor = parseBoolean(getAttribute(attributes, "anchor"));
			tagHandler.frameLabel(frameLabel);
		}
		
		public virtual void  FrameLabel()
		{
		}
		
		public virtual void  Import(SaxAttributesSupport attributes)
		{
			ImportRecord record = new ImportRecord();
			int id = parseInt(getAttribute(attributes, "id"));
			record.name = getAttribute(attributes, "name");
			
			ImportAssets importAssets = (ImportAssets) stack[stack.Count - 1];
			importAssets.importRecords.Add(record);
			
			// todo find the actual tag imported
			createCharacter(id, record);
		}
		
		public virtual void  Import()
		{
		}
		
		public virtual void  ImportAssets(SaxAttributesSupport attributes)
		{
			ImportAssets importAssets = new ImportAssets(flash.swf.TagValues_Fields.stagImportAssets);
			importAssets.url = getAttribute(attributes, "url");
			importAssets.importRecords = new System.Collections.ArrayList();
			stack.Add(importAssets);
		}
		
		public virtual void  ImportAssets()
		{
			ImportAssets importAssets = (ImportAssets) SupportClass.StackSupport.Pop(stack);
			tagHandler.importAssets(importAssets);
		}
		
		public virtual void  line(SaxAttributesSupport attributes)
		{
			StraightEdgeRecord straightEdge = new StraightEdgeRecord();
			if (hasAttribute(attributes, "dx"))
			{
				straightEdge.deltaX = parseInt(getAttribute(attributes, "dx"));
			}
			if (hasAttribute(attributes, "dy"))
			{
				straightEdge.deltaY = parseInt(getAttribute(attributes, "dy"));
			}
			
			DefineShape defineShape = (DefineShape) stack[stack.Count - 1];
			defineShape.shapeWithStyle.shapeRecords.Add(straightEdge);
		}
		
		public virtual void  line()
		{
		}
		
		public virtual void  linestyle(SaxAttributesSupport attributes)
		{
			DefineShape defineShape = (DefineShape) stack[stack.Count - 1];
			LineStyle linestyle = new LineStyle();
			if (defineShape.code == flash.swf.TagValues_Fields.stagDefineShape3)
			{
				linestyle.color = parseRGBA(getAttribute(attributes, "color"));
			}
			else
			{
				linestyle.color = parseRGB(getAttribute(attributes, "color"));
			}
			linestyle.width = parseInt(getAttribute(attributes, "width"));
			linestyles.Add(linestyle);
		}
		
		public virtual void  linestyle()
		{
		}
		
		public virtual void  swf(SaxAttributesSupport attributes)
		{
			Header h = new Header();
			h.version = parseInt(getAttribute(attributes, "version"));
			h.compressed = parseBoolean(getAttribute(attributes, "compressed"));
			h.rate = parseInt(getAttribute(attributes, "framerate"));
			h.size = parseRect(getAttribute(attributes, "size"));
			this.header = h;
			tagHandler.header(h);
			
			/*
			this.packageManager = new CompilerPackageManager(h.version, topLevel, 0);
			
			// register an asclassloader for the given aspath
			ASClassLoader asLoader = new ASClassLoader(aspath, false, null);
			asLoader.pm = packageManager;
			asLoader.debug = false;
			packageManager.addLoader(asLoader);
			packageManager.findType("String");
			
			MessageHandler.setThreadLocalMessageHandler(outputHandler);
			*/
		}
		
		public virtual void  swf()
		{
		}
		
		public virtual void  JPEGTables(SaxAttributesSupport attributes)
		{
			text = new System.Text.StringBuilder();
			if (hasAttribute(attributes, "encoding"))
			{
				if (!getAttribute(attributes, "encoding").Equals("base64"))
				{
					//UPGRADE_ISSUE: Constructor 'org.xml.sax.SAXParseException.SAXParseException' was not converted. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1000_orgxmlsaxSAXParseExceptionSAXParseException_javalangString_orgxmlsaxLocator'"
					fatalError(new SAXParseException("unknown encoding " + getAttribute(attributes, "encoding"), locator));
				}
			}
		}
		
		public virtual void  JPEGTables()
		{
			if (text != null)
			{
				System.String encoded = text.ToString();
				text = null;
				
				Base64.Decoder dec = new Base64.Decoder();
				
				dec.decode(encoded);
				
				jpegTables = new GenericTag(flash.swf.TagValues_Fields.stagJPEGTables);
				jpegTables.data = dec.flush();
				currentHandler().jpegTables(jpegTables);
			}
		}
		
		public virtual void  ShowFrame(SaxAttributesSupport attributes)
		{
			currentHandler().showFrame(new ShowFrame());
			
			if (sprite != null)
			{
				sprite.framecount++;
			}
			else
			{
				header.framecount++;
			}
		}
		
		public virtual void  ShowFrame()
		{
		}
		
		public virtual void  styleChange(SaxAttributesSupport attributes)
		{
			StyleChangeRecord styleChange = new StyleChangeRecord();
			if (hasAttribute(attributes, "dx") || hasAttribute(attributes, "dy"))
			{
				styleChange.stateMoveTo = true;
				styleChange.moveDeltaX = parseInt(getAttribute(attributes, "dx"));
				styleChange.moveDeltaY = parseInt(getAttribute(attributes, "dy"));
			}
			if (hasAttribute(attributes, "fillStyle0"))
			{
				styleChange.stateFillStyle0 = true;
				styleChange.fillstyle0 = parseInt(getAttribute(attributes, "fillStyle0"));
			}
			if (hasAttribute(attributes, "fillStyle1"))
			{
				styleChange.stateFillStyle1 = true;
				styleChange.fillstyle1 = parseInt(getAttribute(attributes, "fillStyle1"));
			}
			if (hasAttribute(attributes, "lineStyle"))
			{
				styleChange.stateLineStyle = true;
				styleChange.linestyle = parseInt(getAttribute(attributes, "lineStyle"));
			}
			styleChange.fillstyles = new System.Collections.ArrayList();
			styleChange.linestyles = new System.Collections.ArrayList();
			fillstyles = styleChange.fillstyles;
			linestyles = styleChange.linestyles;
			stack.Add(styleChange);
		}
		
		public virtual void  styleChange()
		{
			StyleChangeRecord styleChange = (StyleChangeRecord) SupportClass.StackSupport.Pop(stack);
			if (fillstyles.Count != 0)
			{
				styleChange.stateNewStyles = true;
			}
			
			DefineShape defineShape = (DefineShape) stack[stack.Count - 1];
			defineShape.shapeWithStyle.shapeRecords.Add(styleChange);
			fillstyles = defineShape.shapeWithStyle.fillstyles;
			linestyles = defineShape.shapeWithStyle.linestyles;
		}
		
		public virtual void  PlaceObject2(SaxAttributesSupport attributes)
		{
			PlaceObject tag = new PlaceObject(flash.swf.TagValues_Fields.stagPlaceObject2);
			tag.depth = parseInt(getAttribute(attributes, "depth"));
			if (hasAttribute(attributes, "className"))
			{
				tag.ClassName = getAttribute(attributes, "className");
			}
			if (hasAttribute(attributes, "hasImage"))
			{
				tag.HasImage = getAttribute(attributes, "hasImage").Equals("true");
			}
			if (hasAttribute(attributes, "idref"))
			{
				int idref = parseInt(getAttribute(attributes, "idref"));
				tag.Ref = findCharacter(idref);
			}
			if (hasAttribute(attributes, "name"))
			{
				tag.Name = getAttribute(attributes, "name");
			}
			if (hasAttribute(attributes, "clipDepth"))
			{
				tag.ClipDepth = parseInt(getAttribute(attributes, "clipDepth"));
			}
			if (hasAttribute(attributes, "ratio"))
			{
				tag.Ratio = parseInt(getAttribute(attributes, "ratio"));
			}
			if (hasAttribute(attributes, "cxform"))
			{
				tag.Cxform = parseCXForm(getAttribute(attributes, "cxform"));
			}
			if (hasAttribute(attributes, "matrix"))
			{
				tag.Matrix = parseMatrix(getAttribute(attributes, "matrix"));
			}
			
			stack.Add(tag);
			text = new System.Text.StringBuilder();
		}
		
		public virtual void  PlaceObject2()
		{
			PlaceObject tag = (PlaceObject) SupportClass.StackSupport.Pop(stack);
			//try
			//{
			//String code = text.toString();
			text = null;
			
			/*
			if (code.length() > 0)
			{
			AsActionsContainerInfo info = new AsActionsContainerInfo();
			ActionScriptCompiler compiler = packageManager.createCompiler(info, ActionType.kSpriteActions,
			CompileFlags.kCompileString,
			locator.getLineNumber());
			compiler.setFileName(docPath);
			compiler.compile(code, true);
			if (compiler.errorsExist())
			{
			throw new SAXParseException("compile failed", locator);
			}
			byte[] bytecode = compiler.getAsBytes();
			
			ActionDecoder decoder = new ActionDecoder(new SwfDecoder(bytecode, header.version));
			tag.setClipActions(decoder.decodeClipActions(bytecode.length));
			}
			*/
			
			currentHandler().placeObject2(tag);
			//}
			//catch (IOException e)
			//{
			//    fatalError(new SAXParseException(e.getMessage(), locator, e));
			//}
		}
		
		public virtual void  SetBackgroundColor(SaxAttributesSupport attributes)
		{
			SetBackgroundColor tag = new SetBackgroundColor(parseRGB(getAttribute(attributes, "color")));
			currentHandler().BackgroundColor = tag;
		}
		
		public virtual void  SetBackgroundColor()
		{
		}
		
		public virtual void  ScriptLimits(SaxAttributesSupport attributes)
		{
			ScriptLimits tag = new ScriptLimits(parseInt(getAttribute(attributes, "maxRecursionLimit")), parseInt(getAttribute(attributes, "scriptTimeLimit")));
			currentHandler().scriptLimits(tag);
		}
		
		public virtual void  ScriptLimits()
		{
		}
		
		private Matrix parseMatrix(System.String s)
		{
			Matrix matrix = new Matrix();
			for (int i = 0; i < s.Length; i++)
			{
				char c = s[i];
				switch (c)
				{
					
					case 'r': 
						i++;
						System.String[] parts = StringUtils.split(s.Substring(i), "[, ]", 3);
						matrix.setRotate(System.Double.Parse(parts[0]), System.Double.Parse(parts[1]));
						break;
					
					case 's': 
						i++;
						parts = StringUtils.split(s.Substring(i), "[, ]", 3);
						matrix.setScale(System.Double.Parse(parts[0]), System.Double.Parse(parts[1]));
						break;
					
					case 't': 
						i++;
						parts = StringUtils.split(s.Substring(i), "[, ]", 3);
						matrix.translateX = System.Int32.Parse(parts[0]);
						matrix.translateY = System.Int32.Parse(parts[1]);
						break;
					}
			}
			return matrix;
		}
		
		private Gradient parseGradient(System.String s, bool hasAlpha)
		{
			Gradient gradient = new Gradient(); // todo - support focal
			
			// todo add error checking
			//    count must be 1..8
			//    number of parts must be even
			//    ratio must be 0..255
			System.String[] parts = StringUtils.split(s, " ");
			int count = parts.Length / 2;
			gradient.records = new GradRecord[count];
			for (int i = 0; i < count; i++)
			{
				GradRecord record = gradient.records[i] = new GradRecord();
				record.ratio = System.Int32.Parse(parts[2 * i]);
				record.color = hasAlpha?parseRGBA(parts[2 * i + 1]):parseRGB(parts[2 * i + 1]);
			}
			return gradient;
		}
		
		private CXForm parseCXForm(System.String s)
		{
			// todo add error checking
			//    must be six parts
			//    each term must be -32768..32767
			System.String[] parts = StringUtils.split(s, "([rgb]\\+?| )");
			CXForm cxform = new CXForm();
			cxform.redAddTerm = System.Int32.Parse(parts[0]);
			cxform.redMultTerm = System.Int32.Parse(parts[1]);
			cxform.greenAddTerm = System.Int32.Parse(parts[2]);
			cxform.greenMultTerm = System.Int32.Parse(parts[3]);
			cxform.blueAddTerm = System.Int32.Parse(parts[4]);
			cxform.blueMultTerm = System.Int32.Parse(parts[5]);
			return cxform;
		}
		
		private bool parseBoolean(System.String attribute)
		{
			//UPGRADE_NOTE: Exceptions thrown by the equivalent in .NET of method 'java.lang.Boolean.valueOf' may be different. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1099'"
			return System.Boolean.Parse(attribute);
		}
		
		/// <param name="s">
		/// </param>
		/// <returns> 0x00RRGGBB
		/// </returns>
		private int parseRGB(System.String s)
		{
			int rgb = parseColor(s);
			int color = ((rgb >> 16) & 255) << 16; // red
			color |= ((rgb >> 8) & 255) << 8; // green
			color |= ((rgb >> 0) & 255); // blue
			return color;
		}
		
		/// <param name="s">
		/// </param>
		/// <returns> 0xAARRGGBB
		/// </returns>
		private int parseRGBA(System.String s)
		{
			int rgb = parseColor(s);
			int color = ((rgb >> 24) & 255) << 16; // red
			color |= ((rgb >> 16) & 255) << 8; // green
			color |= ((rgb >> 8) & 255); // blue
			color |= ((rgb >> 0) & 255) << 24; // alpha
			return color;
		}
		
		public static int parseColor(System.String string_Renamed)
		{
			if (string_Renamed.Length > 0)
			{
				if (string_Renamed[0] == '#')
				{
					return (int) System.Convert.ToInt64(string_Renamed.Substring(1), 16);
				}
				else if (string_Renamed.StartsWith("0x") || string_Renamed.StartsWith("0X"))
				{
					//UPGRADE_TODO: Method 'java.lang.Integer.parseInt' was converted to 'System.Convert.ToInt32' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073'"
					return System.Convert.ToInt32(string_Renamed.Substring(2), 16);
				}
				else
				{
					return System.Int32.Parse(string_Renamed);
				}
			}
			else
			{
				return 0;
			}
		}
		
		private bool hasAttribute(SaxAttributesSupport attributes, System.String qName)
		{
			return attributes.GetValue(qName) != null;
		}
		
		private System.String getAttribute(SaxAttributesSupport attributes, System.String qName)
		{
			System.String value_Renamed = attributes.GetValue(qName);
			if (value_Renamed == null)
			{
				//UPGRADE_ISSUE: Constructor 'org.xml.sax.SAXParseException.SAXParseException' was not converted. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1000_orgxmlsaxSAXParseExceptionSAXParseException_javalangString_orgxmlsaxLocator'"
				error(new SAXParseException("attribute not found: " + qName, locator));
			}
			return value_Renamed;
		}
		
		private Rect parseRect(System.String s)
		{
			System.String[] parts = StringUtils.split(s, "x");
			return new Rect(System.Int32.Parse(parts[0]), System.Int32.Parse(parts[1]));
		}
		
		private int parseInt(System.String s)
		{
			return System.Int32.Parse(s);
		}
		
		public override void  endElement(System.String uri, System.String localName, System.String qName)
		{
			try
			{
				System.Reflection.MethodInfo method = GetType().GetMethod(qName, (new System.Type[]{} == null)?new System.Type[0]:(System.Type[]) new System.Type[]{});
				method.Invoke(this, new System.Object[]{});
			}
			catch (System.MethodAccessException e)
			{
				//UPGRADE_ISSUE: Constructor 'org.xml.sax.SAXParseException.SAXParseException' was not converted. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1000_orgxmlsaxSAXParseExceptionSAXParseException_javalangString_orgxmlsaxLocator'"
				warning(new SAXParseException("no end handler for " + qName, locator));
			}
			catch (System.UnauthorizedAccessException e)
			{
				//UPGRADE_TODO: Constructor 'org.xml.sax.SAXParseException.SAXParseException' was converted to 'System.Xml.XmlException' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073_orgxmlsaxSAXParseExceptionSAXParseException_javalangString_orgxmlsaxLocator_javalangException'"
				//UPGRADE_TODO: Class 'org.xml.sax.SAXParseException' was converted to 'System.xml.XmlException' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073'"
				//UPGRADE_TODO: The equivalent in .NET for method 'java.lang.Throwable.getMessage' may return a different value. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1043'"
				fatalError(new System.Xml.XmlException(e.Message, e));
			}
			catch (System.Reflection.TargetInvocationException e)
			{
				//UPGRADE_NOTE: Exception 'java.lang.Throwable' was converted to 'System.Exception' which has different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1100'"
				System.Exception t = e.GetBaseException();
				//UPGRADE_TODO: Class 'org.xml.sax.SAXException' was converted to 'System.Xml.XmlException' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073'"
				if (t is System.Xml.XmlException)
				{
					//UPGRADE_TODO: Class 'org.xml.sax.SAXException' was converted to 'System.Xml.XmlException' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073'"
					throw (System.Xml.XmlException) t;
				}
				else if (t is System.ApplicationException)
				{
					throw (System.ApplicationException) t;
				}
				else
				{
					//UPGRADE_ISSUE: Constructor 'org.xml.sax.SAXParseException.SAXParseException' was not converted. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1000_orgxmlsaxSAXParseExceptionSAXParseException_javalangString_orgxmlsaxLocator'"
					//UPGRADE_TODO: The equivalent in .NET for method 'java.lang.Throwable.getMessage' may return a different value. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1043'"
					fatalError(new SAXParseException(t.Message, locator));
				}
			}
		}
		
		public override void  endDocument()
		{
			tagHandler.finish();
		}
		
		//UPGRADE_TODO: Class 'org.xml.sax.SAXParseException' was converted to 'System.xml.XmlException' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073'"
		public override void  warning(System.Xml.XmlException e)
		{
			//outputHandler.warning(0, e.getLineNumber(), docPath, e.getMessage());
		}
		
		//UPGRADE_TODO: Class 'org.xml.sax.SAXParseException' was converted to 'System.xml.XmlException' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073'"
		public override void  error(System.Xml.XmlException e)
		{
			//outputHandler.error(0, e.getLineNumber(), docPath, e.getMessage());
		}
		
		//UPGRADE_TODO: Class 'org.xml.sax.SAXParseException' was converted to 'System.xml.XmlException' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073'"
		public override void  fatalError(System.Xml.XmlException e)
		{
			//outputHandler.error(0, e.getLineNumber(), docPath, e.getMessage());
			throw e;
		}
		
		//UPGRADE_TODO: The equivalent in .NET for method 'org.xml.sax.Locator' may return a different value. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1043'"
		public override void  setDocumentLocator(XmlSaxLocator locator)
		{
			this.locator = locator;
		}
		
		
		public virtual bool parse(System.String path)
		{
			// parser property names
			//UPGRADE_NOTE: Final was removed from the declaration of 'JAXP_SCHEMA_LANGUAGE '. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1003'"
			System.String JAXP_SCHEMA_LANGUAGE = "http://java.sun.com/xml/jaxp/properties/schemaLanguage";
			//UPGRADE_NOTE: Final was removed from the declaration of 'JAXP_SCHEMA_SOURCE '. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1003'"
			System.String JAXP_SCHEMA_SOURCE = "http://java.sun.com/xml/jaxp/properties/schemaSource";
			
			//UPGRADE_NOTE: Final was removed from the declaration of 'W3C_XML_SCHEMA '. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1003'"
			System.String W3C_XML_SCHEMA = "http://www.w3.org/2001/XMLSchema";
			
			this.docPath = path;
			//this.outputHandler = handler;
			
			//UPGRADE_TODO: Constructor 'java.io.FileInputStream.FileInputStream' was converted to 'System.IO.FileStream.FileStream' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073_javaioFileInputStreamFileInputStream_javalangString'"
			System.IO.Stream in_Renamed = new System.IO.BufferedStream(new System.IO.FileStream(path, System.IO.FileMode.Open, System.IO.FileAccess.Read));
			XmlSAXDocumentManager parser;
			try
			{
				XmlSAXDocumentManager factory = XmlSAXDocumentManager.NewInstance();
				factory.IsValidating = true;
				factory.NamespaceAllowed = true;
				try
				{
					parser = XmlSAXDocumentManager.CloneInstance(factory);
					//UPGRADE_TODO: Method 'javax.xml.parsers.SAXParser.setProperty' was converted to 'XmlSAXDocumentManager.setProperty' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073_javaxxmlparsersSAXParsersetProperty_javalangString_javalangObject'"
					parser.setProperty(JAXP_SCHEMA_LANGUAGE, W3C_XML_SCHEMA);
					//UPGRADE_TODO: Method 'javax.xml.parsers.SAXParser.setProperty' was converted to 'XmlSAXDocumentManager.setProperty' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073_javaxxmlparsersSAXParsersetProperty_javalangString_javalangObject'"
					GetType();
					//UPGRADE_TODO: Method 'java.lang.Class.getResource' was converted to 'System.Uri' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073_javalangClassgetResource_javalangString'"
					parser.setProperty(JAXP_SCHEMA_SOURCE, new XmlSourceSupport(new System.Uri(System.IO.Path.GetFullPath("swfx.xsd")).ToString()));
				}
				catch (System.Exception e)
				{
					if (e is ManagerNotRecognizedException)
					{
						// schema validation not supported... ignore
						factory.IsValidating = false;
						factory.NamespaceAllowed = true;
						parser = XmlSAXDocumentManager.CloneInstance(factory);
					}
					else if (e is System.IO.IOException)
					{
						throw (System.IO.IOException) e;
					}
					else
					{
						//UPGRADE_TODO: Class 'org.xml.sax.SAXException' was converted to 'System.Xml.XmlException' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073'"
						if (e is System.Xml.XmlException)
						{
							//UPGRADE_TODO: Class 'org.xml.sax.SAXException' was converted to 'System.Xml.XmlException' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073'"
							throw (System.Xml.XmlException) e;
						}
						else
						{
							SupportClass.WriteStackTrace(e, Console.Error);
							parser = null;
						}
					}
				}
				parser.parse(in_Renamed, this);
				return true;
			}
			//UPGRADE_TODO: Class 'org.xml.sax.SAXException' was converted to 'System.Xml.XmlException' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073'"
			catch (System.Xml.XmlException e)
			{
				// errors will have been reported already
				//e.printStackTrace();
				return false;
			}
			catch (System.Exception e)
			{
				//UPGRADE_ISSUE: Class 'javax.xml.parsers.ParserConfigurationException' was not converted. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1000_javaxxmlparsersParserConfigurationException'"
				if (e is ParserConfigurationException)
				{
					if (Trace.error)
						SupportClass.WriteStackTrace(e, Console.Error);
					
					return false;
				}
				else if (e is System.IO.IOException)
				{
					throw (System.IO.IOException) e;
				}
				else
				{
					SupportClass.WriteStackTrace(e, Console.Error);
					return true;
				}
			}
			finally
			{
				in_Renamed.Close();
			}
		}
		
		[STAThread]
		public static void  Main(System.String[] args)
		{
			System.String aspath = null;
			for (int i = 0; i < args.Length; i++)
			{
				if (args[i].Equals("-aspath"))
				{
					aspath = args[++i];
					continue;
				}
				TagEncoder encoder = new TagEncoder();
				//ConsoleOutputHandler tagHandler = new ConsoleOutputHandler(null, null);
				SwfxParser swfxParser = new SwfxParser(encoder, StringUtils.splitPath(aspath));
				bool success = swfxParser.parse(args[i]); //, tagHandler);
				if (success)
				{
					System.String swfFileName = args[i].Substring(0, (args[i].LastIndexOf('.')) - (0)) + ".swf";
					//UPGRADE_TODO: Constructor 'java.io.FileOutputStream.FileOutputStream' was converted to 'System.IO.FileStream.FileStream' which has a different behavior. "ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?index='!DefaultContextWindowIndex'&keyword='jlca1073_javaioFileOutputStreamFileOutputStream_javalangString'"
					System.IO.Stream out_Renamed = new System.IO.BufferedStream(new System.IO.FileStream(swfFileName, System.IO.FileMode.Create));
					try
					{
						encoder.writeTo(out_Renamed);
					}
					finally
					{
						out_Renamed.Close();
					}
				}
				else
				{
					System.Environment.Exit(1);
				}
			}
		}
	}
}